


############################################################################################################
#telegram bot
############################################################################################################



import telebot
from .CallManager import CallManager

token = "309803225:AAEfkOtjUfLCTSHicJD05uy7AvilTCkzOYs"

types_of_tour = {"trip": "–ø–æ–µ–∑–¥–∫–∞", "ship": "–ø–µ—Ä–µ–≥–æ–Ω", "delivery": "–¥–æ—Å—Ç–∞–≤–∫–∞","advance":"–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑"}
price_list = "üí≤  (–ö–æ–±–∞–ª—å—Ç, –õ–∞—Å–µ—Ç—Ç–∏): 1000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 8000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤  –î–æ—Å—Ç–∞–≤–∫–∞: 1000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 7000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤  –ü–µ—Ä–µ–≥–æ–Ω: 2000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 20000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤ –û–∂–∏–¥–∞–Ω–∏–µ: 300 —Å—É–º/–º–∏–Ω—É—Ç—É. 5 –º–∏–Ω—É—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ."

bot = telebot.TeleBot(token)
call_manager = CallManager()

# –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def Start_command(message):
    Start(message)

# –≤—ã–∑—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ–º–æ—â–∏
@bot.message_handler(commands=['help'])
def Help(message):
    bot.send_message(message.chat.id, "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à —Ü–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n ")
    bot.send_contact(message.chat.id, "998977377055", "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏")



# –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=["text"])
def textManager(message):
    current_call = call_manager.GetCall(chat_id=message.chat.id)
    if (current_call):
        if (current_call.HasNumber()):

            if (current_call.waiting_for == "number"):
                call_manager.UpdateCall(chat_id=message.chat.id, new_number=message.text)
            elif (current_call.waiting_for == "comments"):
                if(current_call.type != "advance"):
                    call_manager.UpdateCall(chat_id=message.chat.id, new_details=message.text)
                else:
                    advanced_time = current_call.details
                    call_manager.UpdateCall(chat_id=message.chat.id, new_details=advanced_time + "//" + message.text)

            prepare_for_Send(message)
        elif (current_call.HasAddress() or current_call.HasCoordinates()):
            call_manager.UpdateCall(chat_id=message.chat.id, new_details=message.text)
        elif (current_call.HasType):
            if(current_call.waiting_for == "time"):
                call_manager.UpdateCall(chat_id=message.chat.id,new_details=message.text,new_waiting_for=None)
                call_manager.UpdateCall(chat_id=message.chat.id,new_waiting_for="None")
                RequireLocation(message)
            else:
               call_manager.UpdateCall(chat_id=message.chat.id, new_address=message.text)
               getPhone(message)
        else:
            Start(message)
    else:
        Start(message)




# –ñ–¥–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º
    if call.message:
        if call.data == "start":
            ChooseTypeOfTour(call.message)

        elif call.data in ["trip", "ship", "delivery"]:
            call_manager.AddCall(new_chat_id=call.message.chat.id)
            call_manager.UpdateCall(chat_id=call.message.chat.id, new_type=call.data)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="\n\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ " + types_of_tour[call.data])
            RequireLocation(call.message)

        elif call.data == "advance":
            AdvanceCall(call)

        elif call.data == "cancel":
             Cancel(call.message)
        elif call.data == "price_list":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=price_list)
            ChooseTypeOfTour(call.message)

        elif call.data == "change_number":
            ChangeNumber(call.message)

        elif call.data == "comments":
            AddComment(call.message)
        elif call.data == "send":
            SendCall(call.message)
        elif call.data == "accept_cancel":
            AcceptCancel(message = call.message)
        elif call.data == "accept":
            Accept(message=call.message)
        elif call.data == "cancelCall":
            CancelCall(call.message)


@bot.message_handler()
def Start(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button = telebot.types.InlineKeyboardButton(text=" üèÅ  –ù–∞—á–∞—Ç—å", callback_data="start")
    keyboard.add(callback_button)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞—á–∞—Ç—å —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏", reply_markup=keyboard)


# –≤—ã–∑–æ–≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–µ–∑–¥–∫–∏
@bot.message_handler()
def ChooseTypeOfTour(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    trip_button = telebot.types.InlineKeyboardButton(text="üöñ –ü–æ–µ–∑–¥–∫–∞", callback_data="trip")
    ship_button = telebot.types.InlineKeyboardButton(text="üç∫ –ü–µ—Ä–µ–≥–æ–Ω", callback_data="ship")
    delivery_button = telebot.types.InlineKeyboardButton(text=" üöõ  –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="delivery")
    advance_button = telebot.types.InlineKeyboardButton(text=" üöõ  –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑", callback_data="advance")
    info_button = telebot.types.InlineKeyboardButton(text="üí≤ –¢–∞—Ä–∏—Ñ—ã", callback_data="price_list")

    keyboard.add(trip_button)
    keyboard.add(ship_button)
    keyboard.add(delivery_button)
    keyboard.add(advance_button)
    keyboard.add(info_button)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞", reply_markup=keyboard)


# –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
@bot.message_handler()
def AdvanceCall(call):
    call_manager.AddCall(new_chat_id=call.message.chat.id)
    call_manager.UpdateCall(chat_id=call.message.chat.id, new_type=call.data)
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text="\n\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ " + types_of_tour[call.data])
    bot.send_message(call.message.chat.id, "\n –ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞")
    call_manager.UpdateCall(chat_id=call.message.chat.id,new_waiting_for="time")



# –∑–∞–ø—Ä–∞—à–∏–≤–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
@bot.message_handler()
def RequireLocation(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")

    keyboard.add(cancel_button)

    bot.send_message(message.chat.id, "üëâ –ì–¥–µ –≤—ã? \n\nüëâ –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                     reply_markup=keyboard)


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
@bot.message_handler(content_types=["location"])
def get_location(message):
    latitude = message.location.latitude
    longitude = message.location.longitude
    call_manager.UpdateCall(chat_id=message.chat.id, new_coordinates=(longitude, latitude))
    getPhone(message)


# –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@bot.message_handler()
def getPhone(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard.add(button_phone)
    bot.send_message(message.chat.id, "–ù–∞–º –Ω—É–∂–µ–Ω –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=keyboard)

# –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç
@bot.message_handler(content_types=["contact"])
def GetContact(message):
    call_manager.UpdateCall(chat_id=message.chat.id, new_number=message.contact.phone_number)
    prepare_for_Send(message)

# –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω–µ –æ –∑–∞–∫–∞–∑–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
@bot.message_handler()
def prepare_for_Send(message):
    bot.send_message(message.chat.id, "–í–∞—à –Ω–æ–º–µ—Ä " + call_manager.GetCall(chat_id=message.chat.id).number,
                     reply_markup=telebot.types.ReplyKeyboardRemove())

    keyboard = telebot.types.InlineKeyboardMarkup()
    send_button = telebot.types.InlineKeyboardButton(text="‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="send")
    details_button = telebot.types.InlineKeyboardButton(text="üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data="comments")
    change_number_button = telebot.types.InlineKeyboardButton(text="üìû  –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä", callback_data="change_number")
    cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå  –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")

    keyboard.add(send_button)
    keyboard.add(details_button)
    keyboard.add(change_number_button)
    keyboard.add(cancel_button)

    ready_call = call_manager.GetCall(chat_id=message.chat.id)
    bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ", reply_markup=keyboard)

# –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏
@bot.message_handler()
def AddComment(message):
    call_manager.SetComments(chat_id=message.chat.id)
    bot.send_message(message.chat.id, "–ù–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")

# –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä
@bot.message_handler()
def ChangeNumber(message):
    call_manager.SetNumber(chat_id=message.chat.id)
    bot.send_message(message.chat.id, "–ù–∞–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä")

# –¥–æ–±–∞–≤—å–ª—è–µ—Ç –≤—ã–∑–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@bot.message_handler()
def SendCall(message):
    ready_call = call_manager.GetCall(chat_id=message.chat.id)
    if ready_call.HasAddress():
        AddCall(user_chat_id=message.chat.id, user_address=ready_call.address, user_number=ready_call.number,
                      journey_type=types_of_tour[ready_call.type], comments=ready_call.details)
    else:
        AddCall(user_chat_id=message.chat.id, user_coordinates=(ready_call.longitude, ready_call.latitude),
                      user_number=ready_call.number, journey_type=types_of_tour[ready_call.type],
                      comments=ready_call.details)

    call_manager.RemoveCall(chat_id=message.chat.id)
    bot.send_message(message.chat.id, "\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–∂–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π... ‚è±")

# –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@bot.message_handler()
def SendOffer(chat_id,car_type,car_number,arrival_time=None):
    keyboard = telebot.types.InlineKeyboardMarkup()
    accept_button = telebot.types.InlineKeyboardButton(text="‚úîÔ∏è –ü—Ä–∏–Ω—è—Ç—å", callback_data="accept")
    cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancelCall")


    keyboard.add(accept_button)
    keyboard.add(cancel_button)


    if(arrival_time):
         bot.send_message(chat_id, "\nüöô "+car_type+", "+car_number+"\n üïö"+arrival_time+" –º–∏–Ω—É—Ç",reply_markup=keyboard)
    else:
        bot.send_message(chat_id, "\nüöô " + car_type + ", " + car_number,reply_markup=keyboard)

# —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–∏–µ–∑–¥–µ —Ç–∞–∫—Å–∏
@bot.message_handler()
def SendArrived(chat_id):
    info = DriverInfo(chat_id)
    if(info):
          bot.send_message(chat_id,
                     "\n\n\n –ú–∞—à–∏–Ω–∞ –ø—Ä–∏–µ—Ö–∞–ª–∞\n üöô" + info["car_type"] + "\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã " + info["car_number"])
          bot.send_contact(chat_id, info["driver_number"], "–Ω–∞—à –Ω–æ–º–µ—Ä")

# –æ—Ç–º–µ–Ω–∞ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ
@bot.message_handler()
def Cancel(message):
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text="–æ—Ç–º–µ–Ω–µ–Ω–æ ")
    call_manager.RemoveCall(chat_id=message.chat.id)
    ChooseTypeOfTour(message)


# –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞—à–∏–Ω—ã
@bot.message_handler()
def CancelCall(message):
    RemoveCall(message.chat.id)
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text="–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω")
    ChooseTypeOfTour(message)

# –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞ –∏ –∫–æ–≥–¥–∞ –≤–æ–¥–∏—Ç–µ–ª—å —É–∂–µ –≤ –ø—É—Ç–∏
@bot.message_handler()
def AcceptCancel(message):
    AcceptCancelCall(message.chat.id)
    bot.send_message(message.chat.id,"–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!")

# –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤—ã–∑–æ–≤–∞, –º–∞—à–∏–Ω–∞ –≤—ã–µ–∑–∂–∞–µ—Ç –∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–º
@bot.message_handler()
def Accept(message):
    AcceptCall(message.chat.id)
    keyboard = telebot.types.InlineKeyboardMarkup()
    info = DriverInfo(message.chat.id)

    cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="accept_cancel")
    keyboard.add(cancel_button)
    if(info["time"]==0):
          bot.send_message(message.chat.id, "\n\n\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–º–∞—à–∏–Ω–∞ –≤—ã–µ—Ö–∞–ª–∞\n üöô"+info["car_type"]+"\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã "+info[
              "car_number"])
          bot.send_contact(message.chat.id, info["driver_number"], "–Ω–∞—à –Ω–æ–º–µ—Ä", reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "\n\n\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–º–∞—à–∏–Ω–∞ –≤—ã–µ—Ö–∞–ª–∞\n üöô" + info["car_type"] + "\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã " + info[
            "car_number"] + "\n –º–∞—à–∏–Ω–∞ –ø—Ä–∏–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ "+str(info["time"])+" –º–∏–Ω—É—Ç \n")
        bot.send_contact(message.chat.id, info["driver_number"], "–Ω–æ–º–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è", reply_markup=keyboard)



def StartBot():
        p = multiprocessing.Process(target=BotRun())
        p.start()

def BotRun():
    bot.polling(none_stop=True)

############################################################################################################


