#!/usr/bin/python3
# -*- coding: utf-8 -*-

from .CallManager import CallManager
import telebot


class BotManager:

    price_list = "üí≤  (–ö–æ–±–∞–ª—å—Ç, –õ–∞—Å–µ—Ç—Ç–∏): 1000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 8000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤  –î–æ—Å—Ç–∞–≤–∫–∞: 1000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 7000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤  –ü–µ—Ä–µ–≥–æ–Ω: 2000 —Å—É–º/–∫–º, –º–∏–Ω–∏–º—É–º 20000 —Å—É–º (5 –∫–º. –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n\nüí≤ –û–∂–∏–¥–∞–Ω–∏–µ: 300 —Å—É–º/–º–∏–Ω—É—Ç—É. 5 –º–∏–Ω—É—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ."

    bot = None
    call_manager = None

    def __init__(self,bot):
        self.bot = bot
        self.call_manager = CallManager()

    # –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    def textManager(self,message):
        current_chat_id = message["chat"]["id"]
        message_text = message["text"]
        current_call = self.call_manager.GetCall(chat_id=current_chat_id)

        if (current_call):
            if (self.call_manager.HasNumber(chat_id=current_chat_id)):

                if (current_call.waiting_for == "number"):
                    self.call_manager.UpdateCall(chat_id=current_chat_id, new_number=message_text)

                elif (current_call.waiting_for == "comments"):

                    if (current_call.type != "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑"):
                        self.call_manager.UpdateCall(chat_id=current_chat_id, new_details=message_text)
                    else:
                        advanced_time = current_call.details
                        self.call_manager.UpdateCall(chat_id=current_chat_id,
                                                new_details=advanced_time + "//" + message_text)

                self.prepare_for_Send(message)
            elif (self.call_manager.HasAddress(chat_id=current_chat_id) or self.call_manager.HasCoordinates(
                    chat_id=current_chat_id)):

                self.call_manager.UpdateCall(chat_id=current_chat_id, new_details=message_text)
            elif (self.call_manager.HasType(chat_id=current_chat_id)):

                if (current_call.waiting_for == "time"):
                    self.call_manager.UpdateCall(chat_id=current_chat_id, new_details=message_text, new_waiting_for="None")
                    self.RequireLocation(message)
                else:
                    self.call_manager.UpdateCall(chat_id=current_chat_id, new_address=message_text)
                    self.requestPhone(message)
            else:
                self.Start(message)
        else:
            self.Start(message)

    # –ñ–¥–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —Å –∫–Ω–æ–ø–æ–∫
    def inlineManager(self,call):
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º
        message = call["message"]

        if message:
            current_chat_id = call["message"]["chat"]["id"]
            message_id = call["message"]["message_id"]
            call_data = call["data"]

            if call_data == "start":
                self.ChooseTypeOfTour(message)

            elif call_data in ["–ø–æ–µ–∑–¥–∫–∞","–ø–µ—Ä–µ–≥–æ–Ω","–¥–æ—Å—Ç–∞–≤–∫–∞"]:
                self.call_manager.AddCall(new_chat_id=current_chat_id)
                self.call_manager.UpdateCall(chat_id=current_chat_id, new_type=call_data)
                self.bot.edit_message_text(chat_id=current_chat_id, message_id=message_id,
                                      text="\n\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ " + call_data)
                self.RequireLocation(message)

            elif call_data == "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑":
                self.AdvanceCall(call)

            elif call_data == "cancel":
                self.Cancel(message)
            elif call_data == "price_list":
                self.bot.edit_message_text(chat_id=current_chat_id, message_id=message_id, text=self.price_list)
                self.ChooseTypeOfTour(message)

            elif call_data == "change_number":
                self.ChangeNumber(message)

            elif call_data == "comments":
                self.AddComment(message)
            elif call_data == "send":
                self.SendCall(message)
            elif call_data == "accept_cancel":
                self.AcceptCancel(message=message)
            elif call_data == "accept":
                self.Accept(message=message)
            elif call_data == "cancelCall":
                self.CancelCall(message)

    def Start(self,message):
        current_chat_id = message["chat"]["id"]
        keyboard = telebot.types.InlineKeyboardMarkup()
        callback_button = telebot.types.InlineKeyboardButton(text=" üèÅ  –ù–∞—á–∞—Ç—å", callback_data="start")
        keyboard.add(callback_button)
        self.bot.send_message(current_chat_id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞—á–∞—Ç—å —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏", reply_markup=keyboard)

    # –≤—ã–∑–æ–≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–µ–∑–¥–∫–∏
    def ChooseTypeOfTour(self,message):
        current_chat_id = message["chat"]["id"]

        keyboard = telebot.types.InlineKeyboardMarkup()
        trip_button = telebot.types.InlineKeyboardButton(text="üöñ –ü–æ–µ–∑–¥–∫–∞", callback_data="–ø–æ–µ–∑–¥–∫–∞")
        ship_button = telebot.types.InlineKeyboardButton(text="üç∫ –ü–µ—Ä–µ–≥–æ–Ω", callback_data="–ø–µ—Ä–µ–≥–æ–Ω")
        delivery_button = telebot.types.InlineKeyboardButton(text=" üöõ  –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="–¥–æ—Å—Ç–∞–≤–∫–∞")
        advance_button = telebot.types.InlineKeyboardButton(text=" üöõ  –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑", callback_data="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ó–∞–∫–∞–∑")
        info_button = telebot.types.InlineKeyboardButton(text="üí≤ –¢–∞—Ä–∏—Ñ—ã", callback_data="price_list")

        keyboard.add(trip_button)
        keyboard.add(ship_button)
        keyboard.add(delivery_button)
        keyboard.add(advance_button)
        keyboard.add(info_button)

        self.bot.send_message(current_chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞", reply_markup=keyboard)

    # –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    def AdvanceCall(self,call):

        current_chat_id = call["message"]["chat"]["id"]
        message_id = call["message"]["message_id"]
        call_data = call["data"]

        self.call_manager.AddCall(new_chat_id=current_chat_id)
        self.call_manager.UpdateCall(chat_id=current_chat_id, new_type=call_data)
        self.bot.edit_message_text(chat_id=current_chat_id, message_id=message_id,
                              text="\n\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ " + call_data)
        self.bot.send_message(current_chat_id, "\n –ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞")
        self.call_manager.UpdateCall(chat_id=current_chat_id, new_waiting_for="time")

    # –∑–∞–ø—Ä–∞—à–∏–≤–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    def RequireLocation(self,message):
        current_chat_id = message["chat"]["id"]

        keyboard = telebot.types.InlineKeyboardMarkup()
        cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")

        keyboard.add(cancel_button)

        self.bot.send_message(current_chat_id, "üëâ –ì–¥–µ –≤—ã? \n\nüëâ –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                         reply_markup=keyboard)

    # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    def get_location(self,message):

        current_chat_id = message["chat"]["id"]
        latitude = message["location"]["latitude"]
        longitude = message["location"]["longitude"]

        self.call_manager.UpdateCall(chat_id=current_chat_id, new_coordinates=(longitude, latitude))
        self.requestPhone(message)

    # –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    def requestPhone(self,message):
        current_chat_id = message["chat"]["id"]

        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_phone = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
        keyboard.add(button_phone)
        self.bot.send_message(current_chat_id, "–ù–∞–º –Ω—É–∂–µ–Ω –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=keyboard)

    # –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç
    def GetContact(self,message):
        current_chat_id = message["chat"]["id"]
        number = message["contact"]["phone_number"]

        self.call_manager.UpdateCall(chat_id=current_chat_id, new_number=number)
        self.prepare_for_Send(message)

    # –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω–µ –æ –∑–∞–∫–∞–∑–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    def prepare_for_Send(self,message):
        current_chat_id = message["chat"]["id"]

        self.bot.send_message(current_chat_id, "–í–∞—à –Ω–æ–º–µ—Ä " + self.call_manager.GetCall(chat_id=current_chat_id).number,
                         reply_markup=telebot.types.ReplyKeyboardRemove())

        keyboard = telebot.types.InlineKeyboardMarkup()
        send_button = telebot.types.InlineKeyboardButton(text="‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="send")
        details_button = telebot.types.InlineKeyboardButton(text="üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data="comments")
        change_number_button = telebot.types.InlineKeyboardButton(text="üìû  –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä",
                                                                  callback_data="change_number")
        cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå  –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")

        keyboard.add(send_button)
        keyboard.add(details_button)
        keyboard.add(change_number_button)
        keyboard.add(cancel_button)

        self.bot.send_message(current_chat_id, "–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ", reply_markup=keyboard)

    # –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏
    def AddComment(self,message):
        current_chat_id = message["chat"]["id"]

        self.call_manager.SetComments(chat_id=current_chat_id)
        self.bot.send_message(current_chat_id, "–ù–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")

    # –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä
    def ChangeNumber(self,message):
        current_chat_id = message["chat"]["id"]

        self.call_manager.SetNumber(chat_id=current_chat_id)
        self.bot.send_message(current_chat_id, "–ù–∞–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä")

    # –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—ã–∑–æ–≤–∞  –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤–∏–¥–µ–Ω –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
    def SendCall(self,message):
        current_chat_id = message["chat"]["id"]

        ready_call = self.call_manager.GetCall(chat_id=current_chat_id)
        if self.call_manager.HasAddress(chat_id=current_chat_id):
            self.call_manager.UpdateCall(chat_id=current_chat_id, new_status="new")
        else:
            self.call_manager.UpdateCall(chat_id=current_chat_id, new_status="new", new_isMap="True")

        self.bot.send_message(current_chat_id, "\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–∂–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π... ‚è±")

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    def SendOffer(self,chat_id, car_type, car_number, arrival_time=None):

        keyboard = telebot.types.InlineKeyboardMarkup()
        accept_button = telebot.types.InlineKeyboardButton(text="‚úîÔ∏è –ü—Ä–∏–Ω—è—Ç—å", callback_data="accept")
        cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancelCall")

        keyboard.add(accept_button)
        keyboard.add(cancel_button)

        if (arrival_time):
            self.bot.send_message(chat_id, "\nüöô " + car_type + ", " + car_number + "\n üïö" + arrival_time + " –º–∏–Ω—É—Ç",
                             reply_markup=keyboard)
        else:
            self.bot.send_message(chat_id, "\nüöô " + car_type + ", " + car_number, reply_markup=keyboard)

    # —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–∏–µ–∑–¥–µ —Ç–∞–∫—Å–∏
    def SendArrived(self,chat_id):
        info = self.DriverInfo(chat_id)
        if (info):
            self.bot.send_message(chat_id,
                             "\n\n\n –ú–∞—à–∏–Ω–∞ –ø—Ä–∏–µ—Ö–∞–ª–∞\n üöô" + info["car_type"] + "\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã " + info[
                                 "car_number"])
            self.bot.send_contact(chat_id, info["driver_number"], "–Ω–∞—à –Ω–æ–º–µ—Ä")

    # –¥–ø–Ω—ã–µ –æ –≤–æ–¥–∏—Ç–µ–ª–µ –∏–∑ –±–¥ –ø–æ chat_id
    def DriverInfo(self,chat_id):
        current_call = self.call_manager.GetCall(chat_id)
        if (current_call):
            driver = current_call.car_set.all()[0]
            return {"car_number": driver.car_number, "car_type": driver.car_type, "time": driver.car_time,
                    "driver_number": driver.driver_number}
        else:
            return None

    # –æ—Ç–º–µ–Ω–∞ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ
    def Cancel(self,message):
        current_chat_id = message["chat"]["id"]
        message_id = message["message_id"]

        self.bot.edit_message_text(chat_id=current_chat_id, message_id=message_id, text="–æ—Ç–º–µ–Ω–µ–Ω–æ ")
        self.call_manager.ResetCall(chat_id=current_chat_id)
        self.ChooseTypeOfTour(message)

    # –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞—à–∏–Ω—ã
    def CancelCall(self,message):
        current_chat_id = message["chat"]["id"]
        message_id = message["message_id"]

        self.call_manager.RemoveCall(current_chat_id)
        self.bot.edit_message_text(chat_id=current_chat_id, message_id=message_id, text="–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!")
        self.ChooseTypeOfTour(message)

    # –æ—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –≤—ã–∑–æ–≤–∞(–∫–æ–≥–¥–∞ –º–∞—à–∏–Ω–∞ –≤ –ø—É—Ç–∏ ) —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç id –Ω–∞ 0, –Ω–æ —Å–∞–º –∑–∞–∫–∞–∑ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –±–¥
    def AcceptCancel(self,message):
        current_chat_id = message["chat"]["id"]

        current_call = self.call_manager.GetCall(chat_id=current_chat_id)
        current_call.status = "accepted_cancel"
        current_call.chat_id = 0
        current_call.save()
        self.bot.send_message(current_chat_id, "–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!")


    # –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤—ã–∑–æ–≤–∞, –º–∞—à–∏–Ω–∞ –≤—ã–µ–∑–∂–∞–µ—Ç –∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–º
    def Accept(self,message):
        current_chat_id = message["chat"]["id"]

        current_call = self.call_manager.GetCall(current_chat_id)
        current_call.status = "accepted"
        current_call.save()

        keyboard = telebot.types.InlineKeyboardMarkup()
        info = self.DriverInfo(current_chat_id)

        cancel_button = telebot.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="accept_cancel")
        keyboard.add(cancel_button)
        if (info["time"] == 0):
            self.bot.send_message(message.chat.id,
                             "\n\n\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–º–∞—à–∏–Ω–∞ –≤—ã–µ—Ö–∞–ª–∞\n üöô" + info["car_type"] + "\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã " +
                             info[
                                 "car_number"])
            self.bot.send_contact(message.chat.id, info["driver_number"], "–Ω–∞—à –Ω–æ–º–µ—Ä", reply_markup=keyboard)
        else:
            self.bot.send_message(message.chat.id,
                             "\n\n\n –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç,–º–∞—à–∏–Ω–∞ –≤—ã–µ—Ö–∞–ª–∞\n üöô" + info["car_type"] + "\n‚û°Ô∏è –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã " +
                             info[
                                 "car_number"] + "\n –º–∞—à–∏–Ω–∞ –ø—Ä–∏–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ " + str(info["time"]) + " –º–∏–Ω—É—Ç \n")
            self.bot.send_contact(message.chat.id, info["driver_number"], "–Ω–æ–º–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è", reply_markup=keyboard)

    def Help(self,message):
        current_chat_id = message["chat"]["id"]

        self.bot.send_message(current_chat_id, "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à —Ü–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n ")
        self.bot.send_contact(current_chat_id, "998977377055", "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏")